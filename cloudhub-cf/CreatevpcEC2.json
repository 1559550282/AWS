{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates a VPC with Managed NAT, similar to the VPC Wizard at https://console.aws.amazon.com/vpc/home#wizardFullpagePublicAndPrivate: (extended from VPC_with_PublicIPs_And_DNS.template sample)",
    "Parameters": {
        "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
        "VPCName": {
            "Description": "YunZhiJia test VPC",
            "Type": "String",
            "Default": "VPC Public and Private with NAT"
        }
    },
    "Mappings": {
        "SubnetConfig": {
            "VPC": {
                "CIDR": "10.0.0.0/16"
            },
            "Public0": {
                "CIDR": "10.0.0.0/24"
            },
            "Private0": {
                "CIDR": "10.0.1.0/24"
            }
        },
        "AZRegions": {
            "us-east-2": {
                "AZs": [
                    "a",
                    "b"
                ]
            }
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "VPC",
                        "CIDR"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "VPCName"
                        }
                    }
                ]
            }
        },
        "PublicSubnet0": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Sub": [
                        "${AWS::Region}${AZ}",
                        {
                            "AZ": {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::FindInMap": [
                                            "AZRegions",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "AZs"
                                        ]
                                    }
                                ]
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "Public0",
                        "CIDR"
                    ]
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCName"
                                    },
                                    "-public-",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::FindInMap": [
                                                    "AZRegions",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "AZs"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "PrivateSubnet0": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Sub": [
                        "${AWS::Region}${AZ}",
                        {
                            "AZ": {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::FindInMap": [
                                            "AZRegions",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "AZs"
                                        ]
                                    }
                                ]
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "Private0",
                        "CIDR"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Private"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCName"
                                    },
                                    "-private-",
                                    {
                                        "Fn::Select": [
                                            0,
                                            {
                                                "Fn::FindInMap": [
                                                    "AZRegions",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "AZs"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCName"
                                    },
                                    "-IGW"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "GatewayToInternet": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCName"
                                    },
                                    "-public-route-table"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "GatewayToInternet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnetRouteTableAssociation0": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet0"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PublicNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCName"
                                    },
                                    "-public-nacl"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "InboundHTTPPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                }
            }
        },
        "OutboundPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                }
            }
        },
        "PublicSubnetNetworkAclAssociation0": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet0"
                },
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                }
            }
        },
        "ElasticIP0": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "NATGateway0": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "ElasticIP0",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "PublicSubnet0"
                }
            }
        },
        "PrivateRouteTable0": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "VPCName"
                                    },
                                    "-private-route-table-0"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "PrivateRouteToInternet0": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable0"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway0"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation0": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet0"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable0"
                }
            }
        },
        "WebSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
            "GroupDescription": "kingdee pubsg",
            "GroupName": "kingdee",
            "VpcId": {"Ref": "VPC"},
            "SecurityGroupIngress": [
                {
                    "IpProtocol": "tcp",
                    "FromPort": 22,
                    "ToPort": 22,
                    "CidrIp": "0.0.0.0/0"
                }
            ]
            }
    },
        "InternalSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
            "GroupDescription": "kingdee privsg",
            "VpcId": {"Ref": "VPC"},
            "SecurityGroupIngress": [
                {
                    "IpProtocol" : "-1",
                    "SourceSecurityGroupId" : {"Ref": "WebSecurityGroup"}
                }
            ]
            }
    },
        "nginx": {
          "Type": "AWS::EC2::Instance",
          "Properties": {
            "ImageId" : "ami-003088de341da8256",
            "InstanceType"   : "t3a.large",
            "KeyName"        : { "Ref" : "KeyName" },
            "NetworkInterfaces" : [{
              "AssociatePublicIpAddress" : "true",
              "DeviceIndex"              : "0",
              "DeleteOnTermination"      : "true",
              "SubnetId"                 : { "Ref" : "PublicSubnet0" },
              "GroupSet"                 : [ { "Ref" : "WebSecurityGroup" } ],
              "PrivateIpAddress" : "10.0.0.138"
            }],
            "Tags":[{"Key": "Name", "Value": "nginx"}]
          }
    },
        "privec2": {
          "Type": "AWS::EC2::Instance",
          "Properties": {
            "ImageId" : "ami-09f9419a40defa2c9",
            "InstanceType"   : "r5a.2xlarge",
            "KeyName"        : { "Ref" : "KeyName" },
            "NetworkInterfaces" : [{
              "AssociatePublicIpAddress" : "true",
              "DeviceIndex"              : "0",
              "DeleteOnTermination"      : "true",
              "SubnetId"                 : { "Ref" : "PrivateSubnet0" },
              "GroupSet"                 : [ { "Ref" : "InternalSecurityGroup" } ],
              "PrivateIpAddress" : "10.0.1.146"
            }],
            "Tags":[{"Key": "Name", "Value": "privec2"}]
          }
	},
		"privec3": {
          "Type": "AWS::EC2::Instance",
          "Properties": {
            "ImageId" : "ami-09d828a0f6b9c6d0b",
            "InstanceType"   : "r5a.2xlarge",
            "KeyName"        : { "Ref" : "KeyName" },
            "NetworkInterfaces" : [{
              "AssociatePublicIpAddress" : "true",
              "DeviceIndex"              : "0",
              "DeleteOnTermination"      : "true",
              "SubnetId"                 : { "Ref" : "PrivateSubnet0" },
              "GroupSet"                 : [ { "Ref" : "InternalSecurityGroup" } ],
              "PrivateIpAddress" : "10.0.1.193"
            }],
            "Tags":[{"Key": "Name", "Value": "privec2"}]
          }
    },
		"privec4": {
          "Type": "AWS::EC2::Instance",
          "Properties": {
            "ImageId" : "ami-026b976541344885e",
            "InstanceType"   : "r5a.2xlarge",
            "KeyName"        : { "Ref" : "KeyName" },
            "NetworkInterfaces" : [{
              "AssociatePublicIpAddress" : "true",
              "DeviceIndex"              : "0",
              "DeleteOnTermination"      : "true",
              "SubnetId"                 : { "Ref" : "PrivateSubnet0" },
              "GroupSet"                 : [ { "Ref" : "InternalSecurityGroup" } ],
              "PrivateIpAddress" : "10.0.1.223"
            }],
            "Tags":[{"Key": "Name", "Value": "privec2"}]
          }
    },
		"privec5": {
          "Type": "AWS::EC2::Instance",
          "Properties": {
            "ImageId" : "ami-0c6d3002dd4325844",
            "InstanceType"   : "r5a.2xlarge",
            "KeyName"        : { "Ref" : "KeyName" },
            "NetworkInterfaces" : [{
              "AssociatePublicIpAddress" : "true",
              "DeviceIndex"              : "0",
              "DeleteOnTermination"      : "true",
              "SubnetId"                 : { "Ref" : "PrivateSubnet0" },
              "GroupSet"                 : [ { "Ref" : "InternalSecurityGroup" } ],
              "PrivateIpAddress" : "10.0.1.40"
            }],
            "Tags":[{"Key": "Name", "Value": "privec2"}]
          }
    }
    },
    "Outputs": {
        "VPCId": {
            "Description": "VPCId of VPC",
            "Value": {
                "Ref": "VPC"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::Region}-${AWS::StackName}-VPC"
                }
            }
        },
        "PublicSubnet0": {
            "Description": "SubnetId of public subnet 0",
            "Value": {
                "Ref": "PublicSubnet0"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::Region}-${AWS::StackName}-PublicSubnet0"
                }
            }
        },
        "PrivateSubnet0": {
            "Description": "SubnetId of private subnet 0",
            "Value": {
                "Ref": "PrivateSubnet0"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::Region}-${AWS::StackName}-PrivateSubnet0"
                }
            }
        },
        "DefaultSecurityGroup": {
            "Description": "DefaultSecurityGroup Id",
            "Value": {
                "Fn::GetAtt": [
                    "VPC",
                    "DefaultSecurityGroup"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::Region}-${AWS::StackName}-DefaultSecurityGroup"
                }
            }
        }
    }
}